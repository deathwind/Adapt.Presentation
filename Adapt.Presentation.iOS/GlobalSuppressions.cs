
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Geolocator.GeolocationSingleUpdateDelegate.Failed(CoreLocation.CLLocationManager,Foundation.NSError)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Geolocator.Geolocator.StartListeningAsync(System.TimeSpan,System.Double,System.Boolean,Adapt.Presentation.Geolocator.ListenerSettings)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Media.#ctor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Media.GetQuailty(Adapt.Presentation.VideoQuality)~UIKit.UIImagePickerControllerQualityType")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Media.SetupController(Adapt.Presentation.iOS.MediaPickerDelegate,UIKit.UIImagePickerControllerSourceType,System.String,Adapt.Presentation.StoreCameraMediaOptions)~Adapt.Presentation.iOS.MediaPickerController")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.CheckPermissionStatusAsync(Adapt.Presentation.Permission)~System.Threading.Tasks.Task{Adapt.Presentation.PermissionStatus}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.GetAvPermissionStatus(Foundation.NSString)~Adapt.Presentation.PermissionStatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.GetEventPermissionStatus(EventKit.EKEntityType)~Adapt.Presentation.PermissionStatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.RequestPermissionsAsync(Adapt.Presentation.Permission[])~System.Threading.Tasks.Task{Adapt.Presentation.PermissionStatusDictionary}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.RequestPhotosPermission~System.Threading.Tasks.Task{Adapt.Presentation.PermissionStatus}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~M:Adapt.Presentation.iOS.Permissions.RequestSpeechPermission~System.Threading.Tasks.Task{Adapt.Presentation.PermissionStatus}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~P:Adapt.Presentation.iOS.Permissions.ContactsPermissionStatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~P:Adapt.Presentation.iOS.Permissions.LocationPermissionStatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~P:Adapt.Presentation.iOS.Permissions.PhotosPermissionStatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0010:Add missing cases", Justification = "<Pending>", Scope = "member", Target = "~P:Adapt.Presentation.iOS.Permissions.SpeechPermissionStatus")]